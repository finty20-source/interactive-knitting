import streamlit as st
import numpy as np

st.title("üß∂ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –≤—è–∑–∞–Ω–∏–µ")

density_stitches = st.number_input("–ü–ª–æ—Ç–Ω–æ—Å—Ç—å (–ø–µ—Ç–ª–∏ –≤ 10 —Å–º)", min_value=1, value=23)
density_rows = st.number_input("–ü–ª–æ—Ç–Ω–æ—Å—Ç—å (—Ä—è–¥—ã –≤ 10 —Å–º)", min_value=1, value=40)
chest = st.number_input("–û–±—Ö–≤–∞—Ç –≥—Ä—É–¥–∏ (—Å–º)", min_value=50, value=90)
length = st.number_input("–î–ª–∏–Ω–∞ –∏–∑–¥–µ–ª–∏—è (—Å–º)", min_value=30, value=55)

stitches_total = int((chest / 10) * density_stitches)
rows_total = int((length / 10) * density_rows)

st.write(f"üîπ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ç–µ–ª—å: **{stitches_total}**")
st.write(f"üîπ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—è–¥–æ–≤: **{rows_total}**")

def calc_neckline(total_rows, total_decreases):
    x = np.linspace(0, total_rows, total_decreases)
    return [(int(r), 1) for r in np.round(x).astype(int)]

neck_calc = calc_neckline(40, 8)
st.subheader("–ü—Ä–∏–º–µ—Ä –≥–æ—Ä–ª–æ–≤–∏–Ω—ã (—É–±–∞–≤–∫–∏)")
for row, dec in neck_calc:
    st.write(f"–†—è–¥ {row}: —É–±–∞–≤–∏—Ç—å {dec} –ø–µ—Ç–ª—é")
