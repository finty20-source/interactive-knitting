import streamlit as st
import numpy as np

st.title("üß∂ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –≤—è–∑–∞–Ω–∏–µ ‚Äî —Ä–∞—Å—á—ë—Ç –ø–µ—Ä–µ–¥–∞ —Å–≤–∏—Ç–µ—Ä–∞")

# -----------------------------
# üßæ –í–≤–æ–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
# -----------------------------
st.header("–í–≤–æ–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")

density_stitches = st.number_input("–ü–ª–æ—Ç–Ω–æ—Å—Ç—å (–ø–µ—Ç–ª–∏ –≤ 10 —Å–º)", min_value=1, value=23)
density_rows = st.number_input("–ü–ª–æ—Ç–Ω–æ—Å—Ç—å (—Ä—è–¥—ã –≤ 10 —Å–º)", min_value=1, value=40)

# –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ä–∫–∏
chest = st.number_input("–û–±—Ö–≤–∞—Ç –≥—Ä—É–¥–∏ (—Å–º)", min_value=50, value=90)
hip = st.number_input("–û–±—Ö–≤–∞—Ç –Ω–∏–∑–∞ –∏–∑–¥–µ–ª–∏—è (—Å–º)", min_value=50, value=80)
length = st.number_input("–î–ª–∏–Ω–∞ –∏–∑–¥–µ–ª–∏—è (—Å–º)", min_value=30, value=55)

# –ü—Ä–æ–π–º–∞
armhole_depth_cm = st.number_input("–ì–ª—É–±–∏–Ω–∞ –ø—Ä–æ–π–º—ã (—Å–º)", min_value=10, value=23)

# –ì–æ—Ä–ª–æ–≤–∏–Ω–∞
neck_width_cm = st.number_input("–®–∏—Ä–∏–Ω–∞ –≥–æ—Ä–ª–æ–≤–∏–Ω—ã (—Å–º)", min_value=5, value=18)
neck_depth_cm = st.number_input("–ì–ª—É–±–∏–Ω–∞ –≥–æ—Ä–ª–æ–≤–∏–Ω—ã (—Å–º)", min_value=2, value=6)

st.write("---")

# -----------------------------
# üîÑ –ü–µ—Ä–µ—Å—á—ë—Ç —Å–º ‚Üí –ø–µ—Ç–ª–∏/—Ä—è–¥—ã
# -----------------------------
st.header("–ü–µ—Ä–µ—Å—á—ë—Ç –≤ –ø–µ—Ç–ª–∏ –∏ —Ä—è–¥—ã")

stitches_chest = int((chest / 10) * density_stitches)
stitches_hip = int((hip / 10) * density_stitches)
rows_total = int((length / 10) * density_rows)

rows_armhole = int((armhole_depth_cm / 10) * density_rows)
neck_stitches = int((neck_width_cm / 10) * density_stitches)
neck_rows = int((neck_depth_cm / 10) * density_rows)

st.write(f"üîπ –ü–µ—Ç–ª–∏ –ø–æ –≥—Ä—É–¥–∏: **{stitches_chest}**")
st.write(f"üîπ –ü–µ—Ç–ª–∏ –ø–æ –Ω–∏–∑—É: **{stitches_hip}**")
st.write(f"üîπ –í—ã—Å–æ—Ç–∞ –∏–∑–¥–µ–ª–∏—è: **{rows_total} —Ä—è–¥–æ–≤**")
st.write(f"üîπ –í—ã—Å–æ—Ç–∞ –ø—Ä–æ–π–º—ã: **{rows_armhole} —Ä—è–¥–æ–≤**")
st.write(f"üîπ –ì–æ—Ä–ª–æ–≤–∏–Ω–∞: {neck_stitches} –ø. –∑–∞ {neck_rows} —Ä.")

# -----------------------------
# üìä –õ–æ–≥–∏–∫–∞
# -----------------------------
def distribute_increases(start_st, end_st, total_rows):
    """–†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏–±–∞–≤–æ–∫ –æ—Ç –Ω–∏–∑–∞ –∫ –≥—Ä—É–¥–∏"""
    diff = end_st - start_st
    if diff <= 0:
        return []
    step = total_rows / diff
    return [round(i * step) for i in range(1, diff + 1)]

def distribute_decreases(total_stitches, total_rows):
    """–†–∞–≤–Ω–æ–º–µ—Ä–Ω—ã–µ —É–±–∞–≤–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ–π–º–∞)"""
    step = total_rows / total_stitches
    return [round(i * step) for i in range(1, total_stitches + 1)]

def calc_round_neckline(total_stitches, total_rows):
    """–£–±–∞–≤–∫–∏ –¥–ª—è –∫—Ä—É–≥–ª–æ–π –≥–æ—Ä–ª–æ–≤–∏–Ω—ã"""
    percentages = [60, 20, 10, 5, 5]
    decreases = [round(total_stitches * p / 100) for p in percentages]
    plan = []
    current_row = 1
    for d in decreases:
        if d > 0:
            plan.append((current_row, d))
        current_row += 2
    while current_row <= total_rows:
        plan.append((current_row, 0))
        current_row += 1
    return plan

# -----------------------------
# üìå –ò—Ç–æ–≥–æ–≤—ã–π –ø–ª–∞–Ω –ø–µ—Ä–µ–¥–∞
# -----------------------------
st.header("–ü–ª–∞–Ω –≤—è–∑–∞–Ω–∏—è –ø–µ—Ä–µ–¥–∞")

rows_to_armhole = rows_total - rows_armhole

st.subheader("1Ô∏è‚É£ –û—Ç –Ω–∏–∑–∞ –¥–æ –ø—Ä–æ–π–º—ã")
hip_to_chest_increases = distribute_increases(stitches_hip, stitches_chest, rows_to_armhole)
st.write(f"–ù—É–∂–Ω–æ –ø—Ä–∏–±–∞–≤–∏—Ç—å {stitches_chest - stitches_hip} –ø–µ—Ç–µ–ª—å –∑–∞ {rows_to_armhole} —Ä—è–¥–æ–≤.")
for r in hip_to_chest_increases:
    st.write(f"‚û°Ô∏è –†—è–¥ {r}: –ø—Ä–∏–±–∞–≤–∏—Ç—å 1 –ø.")

st.subheader("2Ô∏è‚É£ –ü—Ä–æ–π–º–∞ (–ø—Ä—è–º–∞—è)")
# –¥–æ–ø—É—Å—Ç–∏–º, —É–±–∞–≤–ª—è–µ–º –ø–æ 5 –ø–µ—Ç–µ–ª—å —Å –∫–∞–∂–¥–æ–π —Å—Ç–æ—Ä–æ–Ω—ã = 10 –≤—Å–µ–≥–æ
armhole_decreases = distribute_decreases(10, rows_armhole)
st.write("–ü—Ä–æ–π–º–∞: —É–±–∞–≤–∏—Ç—å 10 –ø–µ—Ç–µ–ª—å —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ.")
for r in armhole_decreases:
    st.write(f"‚û°Ô∏è –†—è–¥ {rows_to_armhole + r}: —É–±–∞–≤–∏—Ç—å 1 –ø.")

st.subheader("3Ô∏è‚É£ –ì–æ—Ä–ª–æ–≤–∏–Ω–∞ (–æ–∫—Ä—É–≥–ª–∞—è)")
neck_plan = calc_round_neckline(neck_stitches, neck_rows)
for row, dec in neck_plan:
    if dec > 0:
        st.write(f"‚û°Ô∏è –†—è–¥ {rows_total - rows_armhole - neck_rows + row}: —É–±–∞–≤–∏—Ç—å {dec} –ø.")
    else:
        st.write(f"‚û°Ô∏è –†—è–¥ {rows_total - rows_armhole - neck_rows + row}: –≤—è–∑–∞—Ç—å –ø—Ä—è–º–æ")

# -----------------------------
# ‚úÖ –†–µ–∑—é–º–µ
# -----------------------------
st.write("---")
st.success(
    f"–ü–µ—Ä–µ–¥ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω: {rows_total} —Ä—è–¥–æ–≤.\n"
    f"‚Ä¢ –û—Ç –Ω–∏–∑–∞ –¥–æ –ø—Ä–æ–π–º—ã: {rows_to_armhole} —Ä—è–¥–æ–≤.\n"
    f"‚Ä¢ –ü—Ä–æ–π–º–∞: {rows_armhole} —Ä—è–¥–æ–≤.\n"
    f"‚Ä¢ –ì–æ—Ä–ª–æ–≤–∏–Ω–∞: {neck_rows} —Ä—è–¥–æ–≤."
)
